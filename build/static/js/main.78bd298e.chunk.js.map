{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","getContacts","state","contacts","getFilter","filterReducer","getAllContacts","filter","normalizeFilter","toLowerCase","length","contact","name","includes","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","handleFilter","axios","defaults","baseURL","Form","useState","SetName","number","SetNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","resetForm","className","s","form","onSubmit","preventDefault","find","el","alert","post","then","data","console","log","catch","err","addContact","label","input","type","onChange","pattern","title","required","button","PropType","PropsType","func","isRequired","Filter","container","string","ContactListItem","id","list","item","span","onClick","delete","error","deleteContact","ContactList","useEffect","get","map","App","PropsTypes","onDeleteContact","createReducer","_","action","payload","loading","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78bd298e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__22wLV\",\"list\":\"ContactListItem_list__W6jNB\",\"item\":\"ContactListItem_item__2THQn\",\"span\":\"ContactListItem_span__3G7oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__oISjJ\",\"title\":\"Filter_title__mtLuE\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filterReducer;\n\n\n\n\n\nexport const getAllContacts = state => {\n    const contacts = getContacts(state);\n    const filter = getFilter(state);\n    const normalizeFilter = filter.toLowerCase();\n    if (filter.length > 0) {\n        return contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(normalizeFilter),\n        );\n    } else {\n    return contacts;\n    }\n}\n\n","import { createAction } from \"@reduxjs/toolkit\";\n\n//getcontacts\n// pending\nexport const getContactsRequest = createAction('getContactsRequest');\n//resolved\nexport const getContactsSuccess = createAction('getContactsSuccess');\n// rejected\nexport const getContactsError = createAction('getContactsError');\n\n//addContact\n// pending\nexport const addContactRequest = createAction('addContactRequest');\n//resolved\nexport const addContactSuccess = createAction('addContactSuccess');\n// rejected\nexport const addContactError = createAction('addContactError');\n\n//deleteContact\n// pending\nexport const deleteContactRequest = createAction('deleteContactRequest');\n//resolved\nexport const deleteContactSuccess = createAction('deleteContactSuccess');\n// rejected\nexport const deleteContactError = createAction('deleteContactError');\n\n\nexport const handleFilter = createAction('phonebookhandleFilter');\n\n\n\n\n","import axios from \"axios\";\nimport {\n    getContactsRequest,\n    getContactsSuccess,\n    getContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n} from \"./phonebook-actions\";\n\naxios.defaults.baseURL = 'https://619b80902782760017445631.mockapi.io/api/v1';\n\n// async\n// export const getData = () =>  async dispatch => {\n//     dispatch(getContactsRequest())\n\n//     try {\n//         const { data } = await axios.get('/contacts');\n//          console.log(data);\n//         dispatch(getContactsSuccess(data));\n       \n//     } catch (error) {\n//         dispatch(getContactsError(error))\n//     }\n// };\n\nexport const getContacts = () => dispatch => {\n    dispatch(getContactsRequest())\n    axios.get('/contacts')\n        .then(({ data }) => {\n        console.log('operation', data);\n        dispatch(getContactsSuccess(data));\n        })\n        .catch (err => {\n            console.log('operation', err);\n            dispatch(getContactsError(err));\n        });\n    \n};\n\n\nexport const addContact = contact => dispatch => {\n    dispatch(addContactRequest())\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => {\n            console.log('operationAdd', data);\n            dispatch(addContactSuccess(data));\n        })\n        .catch (err => {\n            console.log('operation', err);\n            dispatch(addContactError(err));\n        });\n};\n\nexport const deleteContact = (id) => dispatch => {\n    dispatch(deleteContactRequest());\n    axios.delete(`/contacts/${id}`)\n        .then(() => dispatch(deleteContactSuccess(id)))\n        .catch(error => dispatch(deleteContactError(error)))\n}\n\n\n","import { useState } from \"react\";\nimport PropsType from \"prop-types\";\nimport s from \"../Form/Form.module.css\";\n// import { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport { addContact } from '../../redux/phonebook/phonebook-operations'\n\nexport default function Form() {\n  const [name, SetName] = useState('');\n  const [number, SetNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n    \n  const handleChange = (e) => {\n      const { name, value } = e.target;\n      switch (name) {\n          case 'name':\n              SetName(value);\n              break;\n          case 'number':\n              SetNumber(value);\n              break;\n          default:\n      }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n      };\n    \n    if (contacts.find((el) => el.name === contact.name)) {\n        alert(`${contact.name} is already in contacts`);\n      } else {\n        dispatch(addContact(contact));\n      };\n\n    resetForm();\n  }\n\n  const resetForm = () => {\n      SetName('');\n      SetNumber('');\n  }\n\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n}\n\nForm.PropType = {\n  onSubmit: PropsType.func.isRequired,\n};\n\n// const mapDispatchToProps = dispatch => ({\n//   addNewContact: (contact) => dispatch(addNewContact(contact)),\n// })\n\n// export default connect(null, mapDispatchToProps)(Form);","import PropsType from \"prop-types\";\nimport s from \"../Filter/Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { handleFilter } from \"../../redux/phonebook/phonebook-actions\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  return (\n    <div className={s.container}>\n      <h3 className={s.title}>Find contacts by name:</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(handleFilter(e.target.value))}\n        className={s.input}\n      />\n    </div>\n  );\n}\n\nFilter.PropsType = {\n  value: PropsType.string,\n  onChange: PropsType.func.isRequired,\n};\n","import PropsType from \"prop-types\";\nimport s from \"../ContactListItem/ContactListItem.module.css\";\n// import { connect } from \"react-redux\";\n// import { deleteContactSuccess } from \"../../redux/phonebook/phonebook-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/phonebook/phonebook-operations\";\n\nexport function ContactListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  \n  return (\n    <li className={s.list}>\n      <p className={s.item}>\n        {name}:<span className={s.span}>{number}</span>\n      </p>\n      <button\n        type=\"submit\"\n        onClick={() => dispatch(deleteContact(id))}\n        className={s.button}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.PropsTypes = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n  onDeleteContact: PropsType.func.isRequired,\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\n\n//   }\n// }\n\n// export default connect (null, mapDispatchToProps)(ContactListItem);\n","\nimport PropsType from \"prop-types\";\nimport s from \"../ContactList/ContactList.module.css\";\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { getAllContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport { getContacts } from '../../redux/phonebook/phonebook-operations';\n\n\nexport function ContactList() {\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n    \n \n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n          />\n        )\n      )}\n    </ul>\n  );\n}\n\nContactList.PropsType = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n};\n\n\n","\nimport \"./App.css\";\nimport Form from \"./components/Form/Form\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\n\n\nexport default function App() {\n    \n   return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <h2 className=\"title\">Phonebook</h2>\n                <Form/>\n                <div>\n                    <h2 className=\"title\">Contacts</h2>\n                    <Filter/>\n                    <ContactList/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n","import { createReducer } from \"@reduxjs/toolkit\";\n// import { handleFilter } from './phonebook-actions';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n  handleFilter,\n} from \"./phonebook-actions\";\n// import { getContacts, addContact, deleteContact } from \"./phonebook-operations\";\n// import types from './phonebook-types';\n\n// const initialState = [\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ];\n\n\n  export const contacts = createReducer([], {\n  [getContactsSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => {\n    return [...state, action.payload];\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\n  \nexport const loading = createReducer(false, {\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\n  \nexport const error = createReducer(null, {\n  [getContactsError]: (_, action) => action.payload,\n  [addContactError]: (_, action) => action.payload,\n  [deleteContactError]: (_, action) => action.payload,\n  \n});\n\n//async?\n// export const contacts = createReducer([], {\n//   [getContacts.fulfilled]: (_, action) => action.payload,\n//   [addContact.fulfilled]: (state, action) => {\n//     return [...state, action.payload];\n//   },\n//   [deleteContact.fulfilled]: (state, { payload }) =>\n//     state.filter(contact => contact.id !== payload),\n// });\n\n  \n// export const loading = createReducer(false, {\n//   [getContacts.pedning]: () => true,\n//   [getContacts.fulfilled]: () => false,\n//   [getContacts.rejected]: () => false,\n//   [addContact.pedning]: () => true,\n//   [addContact.fulfilled]: () => false,\n//   [addContact.rejected]: () => false,\n//   [deleteContact.pedning]: () => true,\n//   [deleteContact.fulfilled]: () => false,\n//   [deleteContact.rejected]: () => false,\n// });\n\n  \n// export const error = createReducer(null, {\n//   [getContacts.rejected]: (_, action) => action.payload,\n//   [addContact.rejected]: (_, action) => action.payload,\n//   [deleteContact.rejected]: (_, action) => action.payload,\n  \n// });\n\nexport const filterReducer = createReducer('', {\n  [handleFilter]: (_, { payload }) => payload,\n});\n\n\n\n\n\n\n\n\n\n///////////////////////////////////\n\n// const initialState = [\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//   ];\n\n\n// export const contactsReducer = createReducer(initialState, {\n// [addNewContact]: (state, { payload }) => [...state, payload],\n// [deleteContact]: (state, { payload }) =>\n// state.filter(contact => contact.id !== payload),\n// });\n\n\n\n// export const filterReducer = createReducer('', {\n//   [handleFilter]: (_, { payload }) => payload,\n// });\n\n\n// const contactsReducer = (state = initialState, { type, payload }) => {\n//    switch (type) {\n//      case types.ADD:\n//       return [...state, payload];\n     \n     \n//      case types.DELETE:\n//        return state.filter((el) => el.id !== payload.id);\n     \n//      default:\n//        return state;\n//    }\n//  }\n  \n// const filterReducer = (state = '', {type, payload}) => {\n//     switch (type) {\n//       case types.HANDLE_FILTER:\n//         return payload;\n//      default:\n//        return state;\n//    }\n// }\n\n","import { combineReducers } from \"redux\";\n// import { contactsReducer, filterReducer } from \"./phonebook/phonebook-reducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\nimport { contacts, loading, error, filterReducer } from './phonebook/phonebook-reducer';\nimport {\n    // persistStore,\n    // persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\n// const rootReducer = combineReducers({\n//     contacts: contactsReducer,\n//     filter: filterReducer,\n// })\n\nconst rootReducer = combineReducers({\n  contacts,\n  loading,\n  error,\n  filterReducer,\n})\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n// }\n\n// const persistedContactsReducer = persistReducer(persistConfig, rootReducer);\n\n// export const store = configureStore({\n//   reducer:  rootReducer,\n// })\n\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n      // .concat(logger),\n})\n\n// export const persistor = persistStore(store);\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from './redux/store';\n\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate persistor={persistor} loading={null}> */}\n      <Provider store={store}>\n        <App />\n      </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};"],"sourceRoot":""}