{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","handleFilter","getContacts","state","contacts","getFilter","filterReducer","console","log","getAllContacts","filter","normalizeFilter","toLowerCase","length","contact","name","includes","Form","useState","SetName","number","SetNumber","useSelector","dispatch","useDispatch","idName","uuid","idNumber","handleChange","e","target","value","resetForm","className","s","form","onSubmit","preventDefault","id","find","el","alert","label","htmlFor","input","type","onChange","pattern","title","required","button","PropType","PropsType","func","isRequired","Filter","container","string","ContactListItem","list","item","span","onClick","ContactList","map","App","PropsTypes","onDeleteContact","createReducer","_","action","payload","loading","error","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c1f4fad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__oISjJ\",\"title\":\"Filter_title__mtLuE\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// import types from './phonebook-types';\n\nimport { createAction } from \"@reduxjs/toolkit\";\n\n//getcontacts\n// pending\nexport const getContactsRequest = createAction('getContacts/Request');\n//resolved\nexport const getContactsSuccess = createAction('getContacts/Success');\n// rejected\nexport const getContactsError = createAction('getContacts/Error');\n\n//addContact\n// pending\nexport const addContactRequest = createAction('addContact/Request');\n//resolved\nexport const addContactSuccess = createAction('addContact/Success');\n// rejected\nexport const addContactError = createAction('addContact/Error');\n\n//deleteContact\n// pending\nexport const deleteContactRequest = createAction('deleteContact/Request');\n//resolved\nexport const deleteContactSuccess = createAction('deleteContact/Success');\n// rejected\nexport const deleteContactError = createAction('deleteContact/Error');\n\n\nexport const handleFilter = createAction('phonebook/handleFilter');\n\n\n//hooks\n// export const addNewContact = createAction('phonebook/add');\n// export const deleteContact = createAction('phonebook/delete');\n// export const handleFilter = createAction('phonebook/handleFilter');\n\n//vanilla js\n// const addNewContact = (contact) => ({\n//     type: types.ADD,\n//     payload: contact,\n// })\n\n// const deleteContact = (id) => ({\n//     type: types.DELETE,\n//     payload: id,\n// })\n\n// const handleFilter = value => ({\n//     type: types.HANDLE_FILTER,\n//     payload: value,\n// })\n\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filterReducer;\nconsole.log(getContacts);\n\n\n\n\nexport const getAllContacts = state => {\n    const contacts = getContacts(state);\n    console.log(contacts);\n    const filter = getFilter(state);\n    console.log(filter);\n    const normalizeFilter = filter.toLowerCase();\n    if (filter.length > 0) {\n        return contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(normalizeFilter),\n        );\n    } else {\n    return contacts;\n    }\n}\n\n","import { useState } from \"react\";\nimport PropsType from \"prop-types\";\nimport { v4 as uuid } from \"uuid\";\nimport s from \"../Form/Form.module.css\";\n// import { connect } from \"react-redux\";\nimport { addContactSuccess } from '../../redux/phonebook/phonebook-actions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\n\nexport default function Form() {\n  const [name, SetName] = useState('');\n  const [number, SetNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n\n  const idName = uuid();\n  const idNumber = uuid();\n    \n  const handleChange = (e) => {\n      const { name, value } = e.target;\n      switch (name) {\n          case 'name':\n              SetName(value);\n              break;\n          case 'number':\n              SetNumber(value);\n              break;\n          default:\n      }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n      id: uuid(),\n      };\n    \n    if (contacts.find((el) => el.name === contact.name)) {\n        alert(`${contact.name} is already in contacts`);\n      } else {\n        dispatch(addContactSuccess(contact));\n      };\n\n    resetForm();\n  }\n\n  const resetForm = () => {\n      SetName('');\n      SetNumber('');\n  }\n\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label} htmlFor={idName}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            id={idName}\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={idNumber}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            id={idNumber}\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n}\n\nForm.PropType = {\n  onSubmit: PropsType.func.isRequired,\n};\n\n// const mapDispatchToProps = dispatch => ({\n//   addNewContact: (contact) => dispatch(addNewContact(contact)),\n// })\n\n// export default connect(null, mapDispatchToProps)(Form);","import PropsType from \"prop-types\";\nimport s from \"../Filter/Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { handleFilter } from \"../../redux/phonebook/phonebook-actions\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  return (\n    <div className={s.container}>\n      <h3 className={s.title}>Find contacts by name:</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(handleFilter(e.target.value))}\n        className={s.input}\n      />\n    </div>\n  );\n}\n\nFilter.PropsType = {\n  value: PropsType.string,\n  onChange: PropsType.func.isRequired,\n};\n","import PropsType from \"prop-types\";\nimport s from \"../ContactListItem/ContactListItem.module.css\";\n// import { connect } from \"react-redux\";\nimport { deleteContactSuccess } from \"../../redux/phonebook/phonebook-actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport function ContactListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  \n  return (\n    <li className={s.list}>\n      <p className={s.item}>\n        {name}:<span className={s.span}>{number}</span>\n      </p>\n      <button\n        type=\"submit\"\n        onClick={() => dispatch(deleteContactSuccess(id))}\n        className={s.button}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.PropsTypes = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n  onDeleteContact: PropsType.func.isRequired,\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\n\n//   }\n// }\n\n// export default connect (null, mapDispatchToProps)(ContactListItem);\n","\nimport PropsType from \"prop-types\";\nimport s from \"../ContactList/ContactList.module.css\";\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\nimport { useSelector } from \"react-redux\";\n// import { useEffect } from 'react';\nimport { getAllContacts } from \"../../redux/phonebook/phonebook-selectors\";\n// import { getData } from '../../redux/phonebook/phonebook-api';\n\nexport function ContactList() {\n  const contacts = useSelector(getAllContacts);\n\n  // const dispatch = useDispatch(getData);\n\n  // useEffect(() => {\n  //   dispatch(getData(contacts));\n  // }, [dispatch, contacts]);\n    \n  \n  \n \n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n          />\n        )\n      )}\n    </ul>\n  );\n}\n\nContactList.PropsType = {\n  id: PropsType.number.isRequired,\n  name: PropsType.string.isRequired,\n  number: PropsType.number.isRequired,\n};\n\n\n","\nimport \"./App.css\";\nimport Form from \"./components/Form/Form\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\n\n\nexport default function App() {\n    \n   return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <h2 className=\"title\">Phonebook</h2>\n                <Form/>\n                <div>\n                    <h2 className=\"title\">Contacts</h2>\n                    <Filter/>\n                    <ContactList/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n","import { createReducer } from \"@reduxjs/toolkit\";\n// import { addNewContact, deleteContact, handleFilter } from './phonebook-actions';\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactSuccess,\n  deleteContactRequest,\n  deleteContactError,\n  handleFilter,\n} from \"./phonebook-actions\";\n// import types from './phonebook-types';\n\n// const initialState = [\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ];\n\n\n\nexport const contacts = createReducer([], {\n  [getContactsSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => {\n    return [...state, ...action.payload];\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\nconsole.log(contacts);\n  \nexport const loading = createReducer(false, {\n  [getContactsRequest]: (_, action) => true,\n  [getContactsSuccess]: (_, action) => false,\n  [getContactsError]: (_, action) => false,\n  [addContactRequest]: (_, action) => true,\n  [addContactSuccess]: (_, action) => false,\n  [addContactError]: (_, action) => false,\n  [deleteContactRequest]: (_, action) => true,\n  [deleteContactSuccess]: (_, action) => false,\n  [deleteContactError]: (_, action) => false,\n});\n\n  \nexport const error = createReducer(null, {\n  [getContactsError]: (_, action) => action.payload,\n  [addContactError]: (_, action) => action.payload,\n  [deleteContactError]: (_, action) => action.payload,\n  \n});\n\nexport const filterReducer = createReducer('', {\n  [handleFilter]: (_, { payload }) => payload,\n});\n\n\n\n\n\n\n\n\n\n///////////////////////////////////\n\n// const initialState = [\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//   ];\n\n\n// export const contactsReducer = createReducer(initialState, {\n// [addNewContact]: (state, { payload }) => [...state, payload],\n// [deleteContact]: (state, { payload }) =>\n// state.filter(contact => contact.id !== payload),\n// });\n\n\n\n// export const filterReducer = createReducer('', {\n//   [handleFilter]: (_, { payload }) => payload,\n// });\n\n\n// const contactsReducer = (state = initialState, { type, payload }) => {\n//    switch (type) {\n//      case types.ADD:\n//       return [...state, payload];\n     \n     \n//      case types.DELETE:\n//        return state.filter((el) => el.id !== payload.id);\n     \n//      default:\n//        return state;\n//    }\n//  }\n  \n// const filterReducer = (state = '', {type, payload}) => {\n//     switch (type) {\n//       case types.HANDLE_FILTER:\n//         return payload;\n//      default:\n//        return state;\n//    }\n// }\n\n","import { combineReducers } from \"redux\";\n// import { contactsReducer, filterReducer } from \"./phonebook/phonebook-reducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\nimport { contacts, loading, error, filterReducer } from './phonebook/phonebook-reducer';\n// import {\n//     // persistStore,\n//     // persistReducer,\n//     FLUSH,\n//     REHYDRATE,\n//     PAUSE,\n//     PERSIST,\n//     PURGE,\n//     REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\n// const rootReducer = combineReducers({\n//     contacts: contactsReducer,\n//     filter: filterReducer,\n// })\n\nconst rootReducer = combineReducers({\n  contacts,\n  loading,\n  error,\n  filterReducer,\n})\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n// }\n\n// const persistedContactsReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\n\n// export const store = configureStore({\n//     reducer: rootReducer,\n//     middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }).concat(logger),\n// })\n\n// export const persistor = persistStore(store);\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from './redux/store';\n\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate persistor={persistor} loading={null}> */}\n      <Provider store={store}>\n        <App />\n      </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__22wLV\",\"list\":\"ContactListItem_list__W6jNB\",\"item\":\"ContactListItem_item__2THQn\",\"span\":\"ContactListItem_span__3G7oz\"};"],"sourceRoot":""}